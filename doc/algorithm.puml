@startuml
start

if (State exists?) then (no)

else (yes)
  :load state;
endif

:Set filtering
(realm, entity_name);

if(state <> null) then (no)
else (yes)
    :Add to filtering conditions: "lastModified == state.lastExportTime";
endif

:get number of records with filtering conditions from /entity.find;

if (number of records > 0 ) then (yes)
    :create temporary file;

    :lastId = 0;
    note right
        it will store the biggest id fetched within loop
    end note

    :save header row to the temporary file;

    repeat
        :Add/replace "id>=lastId" to the filtering conditions;
        :fetch chunk of records with filtering, sorted on id incrementally from /entity.find;

        :append records to the temporary file;
        :set lastId to id field value of the last record in the chunk;
        note right
            this is why chunk records need to be sorted
        end note
    repeat while (number of records fetched is less than page size) is (no)
    -> yes;

    :save footer row to the temporary file;

    :rename temporary file to destination file name;

else (no)
endif
:save start and end of execution time to the state;
stop
@enduml